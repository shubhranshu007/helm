apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app: {{ .Release.Name }}-api
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
      release: {{ .Release.Name }}
      
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-api
        release: {{ .Release.Name }}
        
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          imagePullSecrets: {{ .Values.image.pullSecrets }}  
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: "0.5"
              memory: 1Gi
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
              periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /
              port: http
              initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
              periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
              failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
   #       resources:
   #         {{- toYaml .Values.resources | nindent 12 }}
            
          env:
            - name: DATABASE_HOST
              value: {{ .Values.database.host | quote }}
            - name: DB_USER
              value: {{ .Values.database.username }}
            - name: DB_PASSWORD
              value: {{ .Values.database.password }}
            - name: DATABASE_PORT
              value: {{ .Values.database.port | quote }}
            - name: DATABASE_NAME
              value: {{ .Values.database.dbname }}
              
          volumeMounts:
          - name: config-volume
            mountPath: /home/config
              
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ .Release.Name }}-api
                topologyKey: kubernetes.io/hostname
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-api-cm
